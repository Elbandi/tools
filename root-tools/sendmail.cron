#!/bin/bash

set -e
set -o pipefail
set -u

. /usr/lib/tool/bash-utils

basedir=/var/log/cron/user
timestamp=`date "+%F %T %z"`

cron_user=''
cron_job_cmd=''
cron_job_id=''
partial_cron_message=''

while read -r line
do
	if [ "$line" = '' -o "$line" = $'\r' ]
	then
		# we are at the end of headers
		
		if [ -z "$cron_user" -o -z "$cron_job_cmd" ]
		then
			errx -2 "Missing either 'To' or 'Subject' header."
		fi
		
		message_body=`cat`
		if [ "$message_body" = "" -o "$message_body" = $'\n' ]
		then
			continue
		fi
		full_cron_message=$partial_cron_message$line$'\n'$message_body
		unset message_body
		
		cron_job=$cron_job_cmd
		if [ -n "$cron_job_id" ]; then cron_job=$cron_job_id; fi
		
		command_name_noslash=`echo "$cron_job" | sed -e 's@/@⁄@g'`
		command_name_noslash=${command_name_noslash:0:255}
		user_name_noslash=`echo "$cron_user" | sed -e 's@/@⁄@g'`
		
		set +e
		# let's see if the user can create her own directory
		if [ ! -d "$basedir/$user_name_noslash" ]
		then
			install -o "$cron_user" -m 0750 -d "$basedir/$user_name_noslash"
		fi
		# if it's still is not there, let's try this custom sudo rule
		if [ ! -d "$basedir/$user_name_noslash" ]
		then
			sudo subst_sudo_user /usr/bin/install -o '$SUDO_USER' -m 0750 -d /var/log/cron/user/'$SUDO_USER'
		fi
		set -e
		# if we failed to create the directory,
		# let's fail when we try to write to a file under it.
		
		logfile=$basedir/$user_name_noslash/$command_name_noslash
		echo "$full_cron_message" | sed -e 's!^!'"$timestamp\t"'!' >> "$logfile"
	else
		# we are reading the email headers
		
		partial_cron_message=$partial_cron_message$line$'\n'
		if [ "${line:0:3}" = To: ]
		then
			# assuming a single space before username, ie. "To: USERNAME"
			cron_user=${line:4}
		elif [ "${line:0:8}" = Subject: ]
		then
			# assuming the header like "Subject: Cron <user@host> command..."
			cron_job_cmd=`echo "$line" | cut -d' ' -f4-`
			# trim leading spaces and tabs
			cron_job_cmd=${cron_job_cmd/#+( |$'\t')}
		elif [[ $line =~ X-Cron-Env:\ \<CRONJOBID=(.+?)\> ]]
		then
			# record CRONJOBID if the user did set it
			cron_job_id=${BASH_REMATCH[1]}
		fi
	fi
done
