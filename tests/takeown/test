#!/bin/bash

set -u
set -e

[ -n "${foreignuser?Please set \$foreignuser to a local unix user name who is not you. Test files will be created in the name of him with sudo.}" ]



testcase()
{
	TESTCASE=$*
	echo "[*] $* ..."
}
end_testcase()
{
	local code=$?
	local result
	
	[ $code = 0 ] && result=PASSED || result=FAILED
	TESTCASENAME+=("$TESTCASE")
	TESTCASERESULT+=("$result")
	echo "[*] $TESTCASE ... $result"
}
count()
{
	find "$1" | wc -l
}
verify()
{
	local count=$1
	local dir=$2
	
	if [ $count != `count $dir` ]
	then
		fail wrong number of files
	fi
	if find $2 -printf '%u %p\n' | grep -vE -m1 "^$USER "
	then
		fail file found not owned by $USER
	fi
}
fail()
{
	echo "$*" >&2
	false
}
summary()
{
	echo
	echo
	echo == SUMMARY ==
	maxlen=0
	for ((i=0; i<${#TESTCASENAME[@]}; i++))
	do
		[ ${#TESTCASENAME[i]} -le $maxlen ] || maxlen=${#TESTCASENAME[i]}
	done
	for ((i=0; i<${#TESTCASENAME[@]}; i++))
	do
		sp=$[maxlen - ${#TESTCASENAME[i]}]
		printf "%s%${sp}s ... %s\n" "${TESTCASENAME[i]}" "" "${TESTCASERESULT[i]}"
	done
}


declare TESTCASE
declare -a TESTCASENAME
declare -a TESTCASERESULT
workdir=`mktemp -d _tests.XXXXXX`
takeown_command=../../usr/bin/takeown
pwd=$PWD


set -E
trap 'end_testcase; summary' ERR


testcase generate test files
mkdir -p $workdir
setfacl -m u:$foreignuser:rwx $workdir
echo "
	file1=takeownTestFile
	dir1=takeownTestDir
	dir2=takeownTestDirRec
" >$workdir/env
(
	cd $workdir && \
	sudo -u $foreignuser $pwd/generate-files
)
setfacl -b -k $workdir
end_testcase


. $workdir/env

testcase takeown 1 file
$takeown_command $workdir/$file1
verify 1 $workdir/$file1
end_testcase


testcase takeown 1 dir
$takeown_command $workdir/$dir1
verify 1 $workdir/$dir1
end_testcase


testcase takeown recursive
generated_files_count=`count $workdir/$dir1`
$takeown_command -R $workdir/$dir1
verify $generated_files_count $workdir/$dir1
end_testcase


summary
