#!/bin/bash

NL=$'\n'
selitem=0
declare -a printers
declare -a optvals
declare -a args
declare -a jobs

clear_input_buffer()
{
	while read -r -t 0
	do
		read -r -s -N 1
	done
}

clear_screen()
{
	echo -n "[1J[H"
}

selected()
{
	[ $selitem = $nitems ]
}

header="[1;44;30m[lpset]"
for hotkey in Disable Enable Reject Accept LPRM Quit
do
  header="$header [1;44;33m${hotkey:0:1}[0;44;37m${hotkey:1} "
done
header="$header[0m"


while true
do
	dflt_prn=`LANG=C lpstat -d | sed -ne 's/.*\s\(\S\+\)/\1/p'`
	printers=(`LANG=C lpstat -p | sed -ne 's/^\S\+\s\+\(\S\+\).*/\1/p' | sed -e "s/^\($dflt_prn\)\$/*\1/"`)
	output="DefaultPrinter/Default Printer: ${printers[@]}$NL"
	output=$output`lpoptions -l`

	clear_screen
	echo "$header"
	
	nitems=0
	nopts=0
	optname=''
	while IFS=: read -r key vals
	do
		label=${key#*/}
		key=${key%%/*}
		
		if selected
		then
			optname=$key
			optvals=()
			optsetv=
			echo -n "> [1m"
		else
			echo -n "  "
		fi
		echo -n "$label[m: "
		
		nval=0
		for val in $vals
		do
			on=0
			if [ "${val:0:1}" = '*' ]
			then
				on=1
				val=${val:1}
				echo -n "[7m"
			fi
			if selected
			then
				optvals+=("$val")
				if [ $on = 1 ]
				then
					optsetv=$nval
				fi
			fi
			echo -n "$val"
			echo -n "[m"
			echo -n " "
			let nval++
		done
		echo
		let nitems++
		let nopts++
	done <<<"$output"
	
	nlpqline=0
	jobs=()
	if lpstat -o "$dflt_prn" | read
	then
		while read lpqline
		do
			if [ $nlpqline = 0 ]
			then
				echo "  [44;37m$lpqline[m"
			else
				re="[^ ]+ +[^ ]+ +([^ ]+)"
				[[ "$lpqline" =~ $re ]]
				jobs[$nitems]=${BASH_REMATCH[1]}
				
				if selected
				then
					echo "> [1m$lpqline[m"
				else
					echo "  $lpqline"
				fi
				let nitems++
			fi
			let nlpqline++
		done < <(lpq | sed -e 1d)
	fi
	echo "==================================="
	n=`LANG=C lpstat -l -p "$dflt_prn" | sed -ne '/^\s*After fault/='`
	lpstat -l -p "$dflt_prn" | head -n ${n:-11}
	

	while true
	do
		read -r -s -N 1 c
		case "$c" in
		"")
			read -r -s -N 1 c2
			case "$c2" in
			"")
				break 2
				;;
			"[")
				read -r -s -N 1 c3
				case "$c3" in
				A)	if [ $selitem -gt 0 ]
					then
						let selitem--
					else
						selitem=$[nitems-1]
					fi
					break 1 ;;
				B)	if [ $selitem -lt $[nitems-1] ]
					then
						let selitem++
					else
						selitem=0
					fi
					break 1 ;;
				C|D)
					if [ -n "$optname" ]
					then
						max=${#optvals[@]}
						let max--
						case "$c3" in
						D)	if [ $optsetv -gt 0 ]
							then
								newvaln=$[optsetv-1]
							else
								newvaln=$max
							fi ;;
						C)	if [ $optsetv -lt $max ]
							then
								newvaln=$[optsetv+1]
							else
								newvaln=0
							fi ;;
						esac
						newval=${optvals[$newvaln]}
						if [ "$optname" = DefaultPrinter ]
						then
							lpoptions -d "$newval" >/dev/null
						else
							lpoptions -o "$optname=$newval"
						fi
						break 1 
					fi
					;;
				*)	clear_input_buffer
					;;
				esac
				;;
			*)	clear_input_buffer
				;;
			esac
			;;
		d|e|r|a|l)
			cmd=''
			args=("$dflt_prn")
			case "$c" in
			d)	cmd=cupsdisable;;
			e)	cmd=cupsenable;;
			r)	cmd=cupsreject;;
			a)	cmd=cupsaccept;;
			l)	job=${jobs[$selitem]}
				if [ -n "$job" ]
				then
					cmd=lprm
					args=("$job")
				fi
				;;
			esac
			if [ -n "$cmd" ]
			then
				command $cmd "${args[@]}"
			fi
			break 1
			;;
		q|Q)
			break 2
			;;
		esac
	done
done

# LANG=C lpstat -d -p -o
