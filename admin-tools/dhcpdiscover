#!/usr/bin/env python

import random
from scapy.all import conf, Ether, IP, UDP, BOOTP, DHCP, DHCPTypes, sendp, srp, mac2str, str2mac, get_if_hwaddr
import sys
import re


def fmt_dhcpoptval(name, val):
	if name == 'message-type':
		val = DHCPTypes[val]
	return esc_nonprint(val)

def fmt_bootpfield(bootp, name, val):
	if name == 'chaddr':
		val = str2mac(val[0:bootp.hlen])
	elif name in ['sname', 'file']:
		val = val[0:val.find('\x00')]
	return esc_nonprint(val)

def esc_nonprint(s):
	return re.sub(r'[\x00-\x1F\\\x7F-\xFF]', lambda m: "\\x%02X" % ord(m.group(0)), str(s))


iface = sys.argv[1]

packet = (
	Ether(dst="ff:ff:ff:ff:ff:ff") /
	IP(src="0.0.0.0", dst="255.255.255.255") /
	UDP(sport=68, dport=67) /
	BOOTP(chaddr=mac2str(get_if_hwaddr(iface)), xid=random.randint(1, 2**32-1)) /
	DHCP(options=[("message-type", "discover"), "end"])
)

conf.checkIPaddr = False
ans, unans = srp(packet, iface=iface, verbose=0, timeout=1.0, nofilter=1)

reply = ans.res[0][1]
bootp_msg = reply.getlayer(BOOTP)
dhcp_msg = reply.getlayer(DHCP)

print ''.join(["%s\t%s\n" % (field, fmt_bootpfield(bootp_msg, field, val)) for field, val in bootp_msg.fields.iteritems()]),

#dhcp_options = dict([x for x in dhcp_msg.options if isinstance(x, tuple)])
#dhcp_message_type = DHCPTypes[dhcp_options['message-type']]
dhcp_options = [x for x in dhcp_msg.options if isinstance(x, tuple) and len(x) == 2]
print ''.join(["option.%s\t%s\n" % (optname, fmt_dhcpoptval(optname, optval)) for optname, optval in dhcp_options]),
