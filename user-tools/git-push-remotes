#!/bin/bash

set -e
set -o pipefail
set -u

thisremotename=`hostname`

while [ $# != 0 ]
do
	case "$1" in
	(-l|--local)
		shift
		thisremotename=$1
		;;
	(-*)
		echo "$0: unknown option: $1" >&2
		exit 1
		;;
	(*)
		break
		;;
	esac
	shift
done


get_pushurl()
{
	local remote=$1
	local pushurl
	if [[ $remote =~ : ]] || [[ $remote =~ /\.git$ ]]
	then
		pushurl=$remote
	else
		pushurl=$(git config --get remote.$remote.url)
	fi
	echo "$pushurl"
}


declare -A nonBareRemotePushURL=()

if [ $# -gt 0 ]
then
	for remote in "$@"
	do
		nonBareRemotePushURL[$remote]=`get_pushurl "$remote"`
	done
else
	remotes=($(git remote))
	for remote in "${remotes[@]}"
	do
		pushurl=`get_pushurl "$remote"`
		if [[ $pushurl =~ /\.git$ ]]
		then
			nonBareRemotePushURL[$remote]=$pushurl
		fi
	done
fi


echo "remotes: ${!nonBareRemotePushURL[*]}" >&2

for remote in "${!nonBareRemotePushURL[@]}"
do
	set +e
	(
		set -e
		pushurl=${nonBareRemotePushURL[$remote]}
		echo "remote: $remote, push-url: $pushurl" >&2
		if [[ $pushurl =~ ^([^:/]+):(.+?)/\.git$ ]]
		then
			remoteHost=${BASH_REMATCH[1]}
			remotePath=${BASH_REMATCH[2]}
			ssh "$remoteHost" multicmd --delimiter=+ --errexit mkdir -p "$remotePath" + git init -q "$remotePath"
		fi
		
		refspecs=()
		for branch in `git for-each-ref 'refs/heads/**' --format='%(refname:lstrip=2)'`
		do
			refspecs+=("refs/heads/$branch:refs/remotes/$thisremotename/$branch")
		done
		git push "$remote" "${refspecs[@]}"
	)
done
