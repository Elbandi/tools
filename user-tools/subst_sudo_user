#!/bin/bash

true <<EOF
=pod

=head1 NAME

subst_sudo_user - Sudo helper program

=head1 SYNOPSIS

subst_sudo_user <B<COMMAND>> [<B<ARGUMENTS>>]

Substitute literal C<$SUDO_USER> in the B<ARGUMENTS> and run B<COMMAND>.

=head1 RATIONALE

It enables sys admins to define sudoers(5) rule in which each user is allowed to
call a privileged command with thier own username in parameters. Example:

  %users ALL=(root:root) NOPASSWD: /usr/tool/subst_sudo_user passwd $SUDO_USER

This rule allows users to run C<subst_sudo_user> (and subsequentially
passwd(1)) as root with verbatim C<$SUDO_USER> parameter. So no shell
variable resolution happens so far. C<Subst_sudo_user> in turn, running
as root, replaces C<$SUDO_USER> to the value of C<SUDO_USER> environment
variable, which is, by sudo(1), guaranteed to be the caller username.
Then it runs passwd(1) (still as root) to change the given user's
password. So effectively with this rule, each user can change their
password without knowing the current one first (because passwd(1)
usually does not ask root for his password).

=head1 EXAMPLES

  %USERS ALL=(root:root) NOPASSWD: /usr/tool/subst_sudo_user /usr/bin/install -o $SUDO_USER -m 0750 -d /var/backup/user/$SUDO_USER

=cut

EOF

set -e
set -o pipefail
set -u

declare -a args=()

shopt -u nocaseglob
shopt -u nocasematch

while [ $# -gt 0 ]
do
	args+=("${1//\$SUDO_USER/$SUDO_USER}")
	shift
done

exec "${args[@]}"
