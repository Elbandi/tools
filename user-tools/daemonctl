#!/bin/bash

true <<EOF
=pod

=head1 NAME

daemonctl - Manage preconfigured libslack daemon(1) daemons more conveniently

=head1 DESCRIPTIONS

Daemonctl presumes some facts about the system:

=over 8

=item daemons are configured in F</etc/daemon.conf>

=item daemons log to /syslog/daemon/daemon.<DAEMON>/today.log

=back

=cut

EOF


set +e
set -u

. /usr/lib/tool/bash-utils

_status()
{
	local daemon status pid started code
	daemon=$1
	
	status=`daemon -n "$daemon" -v --running 2>&1`
	code=$?
	if [ $code = 0 ]
	then
		pid=`head -n1 /var/run/daemons/$daemon.pid`
		started=`ps o lstart='' -p $pid`
		status="$status (running since $started)"
	fi
	echo "$status"
	return $code
}

status()
{
	_status "$@"
	if [ $? != 0 ]
	then
		{
			echo -n "known daemons: "
			list_all_daemons | tr "\n" " "
			echo
		}>&2
	fi
}

list_pidfile_daemons()
{
	ls -1 /var/run/daemons | sed -e 's/\.pid$//'
}

_filter_daemon_names()
{
	perl -ne '($s) = /^\s*(\S+)/; $s =~ /^[^*#]/ and print "$s\n"'
}

list_configured_daemons()
{
	cat /etc/daemon.conf | perl -pe 's/^#DISABLED# //' | _filter_daemon_names
}

list_enabled_daemons()
{
	cat /etc/daemon.conf | _filter_daemon_names
}

list_all_daemons()
{
	{
		list_pidfile_daemons
		list_configured_daemons
	}|\
	sort -u
}

if [ $# = 0 ]
then
	list_all_daemons |\
	while read daemon
	do
		_status "$daemon"
	done
	exit
fi

daemon=$1
shift
verb=''
if [ $# -gt 0 ]
then
	verb=$1
	shift
fi

status "$daemon"

case "$verb" in
start)
	if list_enabled_daemons | grep -qx "$daemon"
	then
		daemon -n "$daemon" -v
	else
		errx 1 "$daemon: not sure, is it enabled in /etc/daemon.conf ?"
	fi
	;;
stop)
	daemon -n "$daemon" -v --stop
	;;
disable)
	cat /etc/daemon.conf | daemon="$daemon" perl -pe 's/^\Q$ENV{daemon}\E\s/#DISABLED# $&/' | sponge /etc/daemon.conf
	;;
enable)
	cat /etc/daemon.conf | daemon="$daemon" perl -pe 's/^#DISABLED# (\Q$ENV{daemon}\E)/$1/' | sponge /etc/daemon.conf
	;;
restart)
	daemon -n "$daemon" -v --restart
	;;
log)
	tail "$@" -f /syslog/daemon/daemon.$daemon/`date +%Y%m%d`.log
	exit
	;;
''|status)
	# status is already shown above
	exit
	;;
*)
	warnx "unknown verb '$verb'"
	warnx "valid verbs: start, restart, stop, log, disable, enable, status"
	false
	;;
esac

_status "$daemon"
