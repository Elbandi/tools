#!/bin/bash

set -e
set -o pipefail
set -u

if [ -n "${1:-}" ]
then
	remotes=($@)
else
	remotes=($(git remote))
fi

declare -A nonBareRemotePushURL=()

for remote in "${remotes[@]}"
do
	if [[ $remote =~ : ]] || [[ $remote =~ /\.git$ ]]
	then
		pushurl=$remote
	else
		pushurl=$(git config --get remote.$remote.url)
	fi
	if [[ $pushurl =~ /\.git$ ]]
	then
		nonBareRemotePushURL[$remote]=$pushurl
	fi
done

echo "remotes: ${!nonBareRemotePushURL[*]}" >&2

for remote in "${!nonBareRemotePushURL[@]}"
do
	echo "remote: $remote" >&2
	pushurl=${nonBareRemotePushURL[$remote]}
	if [[ $pushurl =~ ^([^:/]+):(.+?)/\.git$ ]]
	then
		remoteHost=${BASH_REMATCH[1]}
		remotePath=${BASH_REMATCH[2]}
		ssh "$remoteHost" multicmd --delimiter=+ --errexit mkdir -p "$remotePath" + git init -q "$remotePath"
	fi
	
	refspecs=()
	for branch in `git for-each-ref 'refs/heads/*' --format='%(refname:lstrip=2)' | grep -v ^sync/`
	do
		refspecs+=("refs/heads/$branch:refs/heads/sync/$branch")
	done
	git push "$remote" "${refspecs[@]}"
done
