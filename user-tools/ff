#!/bin/bash

pattern=$1
shift
depth=0

if expr "$pattern" : '.*/' >/dev/null
then
	matchtype=iwholename
else
	matchtype=iname
fi


while true
do
	#echo -e "\r[KDepth $depth" >&2
	find "${@:-.}" -mindepth "$depth" -maxdepth "$depth" -xdev \
		\( -$matchtype "*$pattern*" -printf "1 %p\n" \) -o \
		\( -type d -printf "3 %p\n" \) 2>/dev/null
	cont=`find "${@:-.}" -mindepth "$depth" -maxdepth "$depth" -xdev -printf 1 -quit 2>/dev/null`
	[ -z "$cont" ] && break
	let depth++
done |{
cols=`tput cols`
curpath=''
while read -r fd path
do
	if [ $fd = 3 ]
	then
		curpath=$path
	elif [ $fd = 1 ]
	then
		echo -ne "\r[K" >&2
		echo "$path"
		t=0
	fi
	
	if [ $SECONDS -gt ${t:-0} ]
	then
		x=$curpath
		if [ ${#x} -gt $[cols-3] ]
		then
			x=â€¦${x: -$[cols-4]}/â€¦
		else
			x=$x/â€¦
		fi
		echo -ne "\r[K$x" >&2
		t=$SECONDS
	fi
done
}

echo -ne "\r[K" >&2



true <<EOF

=pod

=head1 NAME

ff - Find files horizontally, ie. a whole directory level at a time, across subtrees

=head1 SYNOPSIS

ff <B<pattern>> [B<path>-1] [B<path>-2] ... [B<path>-n]

=head1 DESCRIPTION

Search files which name matches to B<pattern> in B<path>s directories recursively, case-insensitively.
The file's path is matched if B<pattern> contains '/'.
Searching is done horizontaly, ie. scan the upper-most directory level first completely,
then dive into the next level and scan those directories before moving to the 3rd level deep, and so on.
This way users usually find what they search for more quickly.

=cut

EOF
