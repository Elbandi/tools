#!/bin/bash

true <<'EOF'
=pod

=head1 NAME

ffilt - Filter a file via a command's STDIO and write back to it

=head1 SYNOPSIS

ffilt I<FILE> I<COMMAND> [I<ARGS>]

=head1 DESCRIPTION

Feed I<FILE> into I<COMMAND>'s stdin, then save its stdout back to I<FILE>
if I<COMMAND> ran successfully.

Similar to this shell script:

 output=`cat I<FILE> | I<COMMAND>`
 [ $? = 0 ] && echo "$output" > I<FILE>

=head1 LIMITATIONS

=head1 SEE ALSO

sponge(1), insitu(1) L<https://github.com/athas/insitu>

=cut

EOF


set -e
set -o pipefail
set -u

. /usr/lib/tool/bash-utils


opt_verbose=no


while [ $# != 0 ]
do
	case "$1" in
	--help)
		pod2text "$0"
		exit 0;;
	-v|--verbose)
		opt_verbose=yes
		;;
	--)
		shift
		break;;
	-*)
		errx -1 "unknown option: $1";;
	*)
		break;;
	esac
	shift
done

set -e
set -o pipefail
set -u

file=$1
shift

stdout=`cat "$file" | command "$@"`
# pipefail make us die here if either cat or command failed
cat > "$file" <<< "$stdout"
