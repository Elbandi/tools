#!/bin/bash

true <<EOF
=pod

=head1 NAME

chshebang - Change a script's default interpreter

=cut

EOF


force=0
insert=0
dummy=0
NL=$'\n'

while [ -n "$1" ]; do
	case "$1" in
	-h|--help)
		echo "Usage: $0 [-h|--help] [-f|--force] [-i|--insert] [-d|--dummy] <INTERPRETER> <FILES> ...
  -f   force replace 1st line with INTERPRETER, even if it does not start \`#!' signature
  -i   insert, instead of replace
  -d   disable intelligent path preparation
  INTERPRETER   basename or full path of new interpreter, leading \`#!' signature is implicite
                examplpes: /usr/bin/awk, bash, #!/bin/sh
  FILES         files to modify"
		exit 0;;
	-f|--force)
		force=1;;
	-i|--insert)
		insert=1;;
	-d|--dummy)
		dummy=1;;
	-*)	echo "Unknown option: $1" >&2
		exit 1;;
	--)	shift
		break;;
	*)	break;;
	esac
	shift
done


shebang=$1
shift

if [ $dummy = 0 ]; then
	if [ "${shebang:0:2}" != '#!' ]; then
		if [ "${shebang:0:1}" != '/' ]; then
			p=`which "$shebang"`
			if [ $? = 0 ]; then
				shebang=$p
			else
				echo "Command not found: $shebang" >&2
				exit 2
			fi
		fi
		shebang="#!$shebang"
	fi
fi

# escape sed(1) meta chars in this order: \ , &
shebang=${shebang//\\/\\\\}
shebang=${shebang//,/\\,}
shebang=${shebang//&/\\&}

if [ $insert -eq 1 ]; then
	for file; do
		sed -n "1i$shebang${NL}p" -i "$file"
	done

elif [ $force -eq 1 ]; then
	for file; do
		sed -n "1s,^.*\$,$shebang,;p" -i "$file"
	done

else
	for file; do
		sed -n "1s,^#!/.*\$,$shebang,;p" -i "$file"
	done
fi

