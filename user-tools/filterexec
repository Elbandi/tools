#!/bin/bash

true <<'EOF'

=pod

=head1 NAME

filterexec - Echo those arguments with which the given command returns zero.

=head1 SYNOPSIS

filterexec I<COMMAND> [I<ARGS>] -- I<DATA-1> [I<DATA-2> [... I<DATA-n>]]

=head1 DESCRIPTION

Prints each I<DATA> (1 per line) only if command I<COMMAND ARGS DATA> exits
succesfully, ie. with zero exit status.

If you want to evaluate not command line arguments, but data read on STDIN,
then combine filterexec(1) with foreach(1).

=head1 EXAMPLE

  filterexec test -d -- $(ls)

Shows only the directories.
The shell's tokenization may wrongly splits up file names containing space.
Perhaps set C<IFS> to newline only.

  ls -1 | foreach filterexec test -d --

Same, but file names are supplied 1-by-1, not all at once,
hence filterexec(1) is invoked multiple times.

=cut

EOF

# text editor syntax highlighter fix: '



declare -a command=()
declare -a items=()

if [ "$1" = --help ]
then
	pod2text "$0"
	exit 0
fi

while [ $# -gt 0 ]
do
	case "$1" in
	--)
		shift
		break;;
	*)
		command+=("$1")
		;;
	esac
	shift
done

items=("$@")

for item in "${items[@]}"
do
	if "${command[@]}" "$item"
	then
		printf '%s\n' "$item"
	fi
done
