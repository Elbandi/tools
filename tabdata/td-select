#!/usr/bin/env perl

=pod

=head1 NAME

td-select - Show only the specified columns from the input tabular data stream.

=head1 USAGE

td-select [<OPTIONS>] [--] [-]<COLUMN> [[-]<COLUMN> [...]]

=head1 OPTIONS

=over 4

=item -H, --no--header

do not show headers

=item -h, --header

show headers (default)

=item -i, --ignore-nonexisting-columns

do not treat non-existing (missing or typo) column names as failure

=item -w, --warn-nonexisting-columns

only show warning on non-existing (missing or typo) column names, but
don't fail

=item --strict-columns

warn and fail on non-existing (missing or typo) column names given in
parameters, even if it's prefixed with hyphen, ie. when the user want to
remove the named column from the output.

=back

=head1 DESCRIPTION

COLUMN is either a column name, optionally prefixed with hyphen,
in which case the given column will not be shown,
ie. removed from the shown columns,
or one of these special keywords:

  +ALL    - all columns
  +REST   - the rest of columns not given yet in the parameter list

So if you want to show all columns except one or two:

  td-select +ALL -PASSWD

If you want to put a given column to the first place and left others intact:

  td-select ID +REST

=head1 EXAMPLE

  ls -l | td-trans-ls | td-select -- NAME +REST -INODE -LINKS -MAJOR -MINOR

=cut

do '/usr/lib/tool/perl5/tabdata/common.pl' or die "$@";

process_header(scalar <STDIN>);

@Columns = ();

while($arg = shift @ARGV)
{
	if($arg =~ /^--/)
	{
		die "$0: unknown parameter: $arg\n";
	}
	elsif($arg =~ /^-(.+)$/)
	{
		my $except_column = $1;
		if(not exists $Header{$except_column})
		{
			my $cols = join ", ", @Header;
			warn "$0: $except_column: no such column. known columns: $cols\n" if $OptWarnBadColumnNames;
			exit 3 if $OptFailBadNegativeColumnNames;
		}
		@Columns = grep {$_ ne $except_column} @Columns;
	}
	elsif($arg eq '+ALL')
	{
		push @Columns, @Header;
	}
	elsif($arg eq '+REST')
	{
		push @Columns, grep {not $_ ~~ @Columns} @Header;
	}
	elsif($arg =~ /^(.+)$/)
	{
		my $colname = $1;
		if(not exists $Header{$colname})
		{
			my $cols = join ", ", @Header;
			warn "$0: $colname: no such column. known columns: $cols\n" if $OptWarnBadColumnNames;
			exit 3 if $OptFailBadColumnNames;
		}
		push @Columns, $colname;
	}
	else
	{
		die "$0: unknown parameter: $arg\n";
	}
}

# display selected headers
if($OptShowHeader)
{
	@Output = ();
	for my $col (@Columns)
	{
		push @Output, defined $Header{$col} ? $Header[$Header{$col}] : '';
	}
	print join($FS, @Output).$/;
}


# display selected data fields
while(my @Input = read_record(\*STDIN))
{
	@Output = ();
	
	for my $col (@Columns)
	{
		push @Output, defined $Header{$col} ? $Input[$Header{$col}] : '';
	}
	
	print join($FS, @Output).$/;
}
