#!/bin/bash

. /usr/lib/tool/bash-utils || exit -1

opt_maildir=~/Mail/new/
opt_newer=''
opt_older=''
opt_newer_rel=''
opt_older_rel=''
toggle_pathsonly=''

opt_parser_set_opt()
{
	local optname=$1
	optname=opt_${optname//-/_}
	if [ "${!optname+x}" != x ]
	then
		warnx "option is not known: $1"
		return 1
	fi
	shift
	local optval=$1
	eval "$optname=\$optval"
}

while [ $# -gt 0 ]
do
	if [ "$1" = -- ]
	then
		shift
		break
	elif [[ $1 =~ ^--([a-zA-Z0-9_-]+)=(.*)$ ]]
	then
		opt_parser_set_opt "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}" || exit -1
	elif [[ $1 =~ ^--([a-zA-Z0-9_-]+)$ ]]
	then
		togglename=toggle_${BASH_REMATCH[1]//-/_}
		if [ "${!togglename+x}" = x ]
		then
			eval "$togglename=1"
		else
			shift
			opt_parser_set_opt "${BASH_REMATCH[1]}" "$1" || exit -1
		fi
	elif [[ $1 =~ ^-([a-zA-Z0-9_-]+)$ ]]
	then
		flags=${BASH_REMATCH[1]}
		for (( i=0; i<${#flags}; i++ ))
		do
			opt_parser_set_opt "${flags:$i:1}" 1 || exit -1
		done
		unset flags
		unset i
	fi
	shift
done

find "$opt_maildir" -maxdepth 1 -type f \
	${opt_newer:+-newermt "$opt_newer"} ${opt_older:+! -newermt "$opt_older"} \
	${opt_newer_rel:+-newermt "now - $opt_newer_rel"} ${opt_older_rel:+! -newermt "now - $opt_older_rel"} |\
foreach stat -c "%y	%n" | sort |\
if [ $toggle_pathsonly ]
then
	sed -e 's/[^\t]\+\t//'
else
	foreach -t -p $'\n''${FIELD[1]}'$'\n''${FIELD[0]}'$'\n' \
		pipecmd cat {1} -- pipecmd mail-extract-raw-headers -n From Delivered-To To Cc Subject -- mime-header-decode 
fi
